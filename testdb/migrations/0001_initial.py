# Generated by Django 3.1 on 2020-10-05 02:35

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Categorie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texte', models.CharField(max_length=1500)),
                ('poids', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=500)),
                ('description', models.CharField(max_length=1500)),
                ('nb_questions', models.IntegerField()),
                ('nb_minutes', models.IntegerField()),
                ('score_min', models.IntegerField(default=15)),
                ('categorie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testdb.categorie')),
            ],
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=128)),
                ('lastname', models.CharField(max_length=128)),
                ('email', models.CharField(max_length=128)),
                ('pwd', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Utilisateur_Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField()),
                ('date', models.DateField(null=True)),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testdb.test')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testdb.utilisateur')),
            ],
        ),
        migrations.AddField(
            model_name='utilisateur',
            name='tests',
            field=models.ManyToManyField(through='testdb.Utilisateur_Test', to='testdb.Test'),
        ),
        migrations.CreateModel(
            name='Reponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texte', models.CharField(max_length=1500)),
                ('reponse_correcte', models.IntegerField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testdb.question')),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testdb.test'),
        ),
        migrations.CreateModel(
            name='Choix_Utilisateur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reponse_correcte', models.IntegerField(null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testdb.question')),
                ('reponse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testdb.reponse')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testdb.test')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testdb.utilisateur')),
            ],
            options={
                'unique_together': {('utilisateur', 'test', 'question', 'reponse')},
            },
        ),
    ]
